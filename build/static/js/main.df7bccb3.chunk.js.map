{"version":3,"sources":["redux/actionsTypes.js","redux/actions.js","components/SelectField.js","components/TextFieldComp.js","hooks/useAxios.js","pages/Settings.js","pages/Questions.js","pages/FinalScreen.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["CHANGE_CATEGORY","CHANGE_DIFFICULTY","CHANGE_TYPE","CHANGE_AMOUNT","CHANGE_SCORE","handleAmountChange","payload","type","handleScoreChange","SelectField","props","label","options","dispatch","useDispatch","useState","value","setValue","Box","mt","width","FormControl","size","fullWidth","InputLabel","Select","onChange","e","target","handleDifficultyChange","handleTypeChange","map","id","name","MenuItem","TextFieldComp","TextField","variant","axios","defaults","baseURL","useAxios","url","response","setResponse","error","setError","loading","setLoading","useEffect","get","then","res","data","catch","err","finally","Settings","history","useHistory","CircularProgress","Typography","color","onSubmit","preventDefault","push","trivia_categories","Button","Questions","useSelector","state","question_category","question_difficulty","question_type","amount_of_question","score","apiUrl","concat","questionIndex","setQuestionIndex","setOptions","results","length","question","answers","incorrect_answers","splice","max","Math","floor","random","correct_answer","handleClickAnswer","textContent","decode","onClick","FinalScreen","disptach","fontWeight","mb","App","Container","maxWidth","textAlign","path","exact","initialState","reducer","action","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"4QAAaA,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAc,cACdC,EAAgB,gBAChBC,EAAe,eCmBfC,EAAqB,SAACC,GAAD,MAAc,CAC9CC,KAAMJ,EACNG,YAGWE,EAAoB,SAACF,GAAD,MAAc,CAC7CC,KAAMH,EACNE,Y,OCkBaG,EAtCK,SAACC,GAAW,IACtBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QACTC,EAAWC,cAFY,EAGHC,mBAAS,IAHN,mBAGtBC,EAHsB,KAGfC,EAHe,KAsB7B,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAM,OAAlB,SACE,eAACC,EAAA,EAAD,CAAaC,KAAK,QAAQC,WAAS,EAAnC,UACE,cAACC,EAAA,EAAD,UAAab,IACb,cAACc,EAAA,EAAD,CAAQT,MAAOA,EAAOL,MAAOA,EAAOe,SArBrB,SAACC,GAEpB,OADAV,EAASU,EAAEC,OAAOZ,OACVL,GACN,IAAK,WACHE,GDX6BP,ECWCqB,EAAEC,OAAOZ,MDXG,CAChDT,KAAMP,EACNM,aCUM,MACF,IAAK,aACHO,EDT8B,SAACP,GAAD,MAAc,CAClDC,KAAMN,EACNK,WCOeuB,CAAuBF,EAAEC,OAAOZ,QACzC,MACF,IAAK,OACHH,EDPwB,SAACP,GAAD,MAAc,CAC5CC,KAAML,EACNI,WCKewB,CAAiBH,EAAEC,OAAOZ,QACnC,MACF,QACE,ODpB4B,IAACV,GC4B7B,SACGM,EAAQmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,cAACC,EAAA,EAAD,CAAUlB,MAAOgB,EAAjB,SACGC,GADuBD,c,SCXvBG,EArBO,WACpB,IAAMtB,EAAWC,cAKjB,OACE,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAM,OAAlB,SACE,cAACC,EAAA,EAAD,CAAaE,WAAS,EAACD,KAAK,QAA5B,SACE,cAACc,EAAA,EAAD,CACEV,SARa,SAACC,GACpBd,EAASR,EAAmBsB,EAAEC,OAAOZ,SAQ/BqB,QAAQ,WACR1B,MAAM,sBACNJ,KAAK,SACLe,KAAK,e,iBCjBfgB,IAAMC,SAASC,QAAU,sBAEzB,IAmBeC,EAnBE,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACI3B,mBAAS,MADb,mBACrB4B,EADqB,KACXC,EADW,OAEF7B,mBAAS,IAFP,mBAErB8B,EAFqB,KAEdC,EAFc,OAGE/B,oBAAS,GAHX,mBAGrBgC,EAHqB,KAGZC,EAHY,KAgB5B,OAXAC,qBAAU,WAENX,IACGY,IAAIR,GACJS,MAAK,SAACC,GAAD,OAASR,EAAYQ,EAAIC,SAC9BC,OAAM,SAACC,GAAD,OAAST,EAASS,MACxBC,SAAQ,kBAAMR,GAAW,QAG7B,CAACN,IAEG,CAAEC,WAAUE,QAAOE,YCqCbU,EAnDE,WAAO,IAAD,EACgBhB,EAAS,CAAEC,IAAK,sBAA7CC,EADa,EACbA,SAAUE,EADG,EACHA,MAAOE,EADJ,EACIA,QACnBW,EAAUC,cAEhB,GAAIZ,EACF,OACE,cAAC7B,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,cAACyC,EAAA,EAAD,MAKN,GAAIf,EACF,OACE,cAACgB,EAAA,EAAD,CAAYxB,QAAQ,KAAKlB,GAAI,GAAI2C,MAAM,MAAvC,8BAsBJ,OACE,uBAAMC,SANa,SAACpC,GACpBA,EAAEqC,iBACFN,EAAQO,KAAK,eAIb,UACE,cAAC,EAAD,CAAarD,QAAS+B,EAASuB,kBAAmBvD,MAAM,aACxD,cAAC,EAAD,CAAaC,QAnBS,CACxB,CAAEoB,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,SAAUC,KAAM,UACtB,CAAED,GAAI,OAAQC,KAAM,SAgBuBtB,MAAM,eAC/C,cAAC,EAAD,CAAaC,QAdG,CAClB,CAAEoB,GAAI,WAAYC,KAAM,mBACxB,CAAED,GAAI,UAAWC,KAAM,eAYctB,MAAM,SACzC,cAAC,EAAD,IACA,cAACO,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAM,OAAlB,SACE,cAAC+C,EAAA,EAAD,CAAQ5C,WAAS,EAACc,QAAQ,YAAY9B,KAAK,SAA3C,+B,gBC4CO6D,EAhFG,WAAO,IAAD,EAOlBC,aAAY,SAACC,GAAD,OAAWA,KALzBC,EAFoB,EAEpBA,kBACAC,EAHoB,EAGpBA,oBACAC,EAJoB,EAIpBA,cACAC,EALoB,EAKpBA,mBACAC,EANoB,EAMpBA,MAEIjB,EAAUC,cACV9C,EAAWC,cAEb8D,EAAM,0BAAsBF,GAC5BH,IACFK,EAASA,EAAOC,OAAP,oBAA2BN,KAElCC,IACFI,EAASA,EAAOC,OAAP,sBAA6BL,KAEpCC,IACFG,EAASA,EAAOC,OAAP,gBAAuBJ,KAnBZ,MAsBQhC,EAAS,CAAEC,IAAKkC,IAAtCjC,EAtBc,EAsBdA,SAAUI,EAtBI,EAsBJA,QAtBI,EAuBoBhC,mBAAS,GAvB7B,mBAuBf+D,EAvBe,KAuBAC,EAvBA,OAwBQhE,mBAAS,IAxBjB,mBAwBfH,EAxBe,KAwBNoE,EAxBM,KAuCtB,GAbA/B,qBAAU,WACR,UAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAUsC,QAAQC,OAAQ,CAC5B,IAAMC,EAAWxC,EAASsC,QAAQH,GAC9BM,EAAO,YAAOD,EAASE,mBAC3BD,EAAQE,QAlCQC,EAmCDJ,EAASE,kBAAkBH,OAlCvCM,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KAmCvC,EACAJ,EAASQ,gBAEXX,EAAWI,GAvCI,IAACG,IAyCjB,CAAC5C,EAAUmC,IAEV/B,EACF,OACE,cAAC7B,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,cAACyC,EAAA,EAAD,MAKN,IAAMgC,EAAoB,SAACjE,GACzB,IAAMwD,EAAWxC,EAASsC,QAAQH,GAC9BnD,EAAEC,OAAOiE,cAAgBV,EAASQ,gBACpC9E,EAASL,EAAkBmE,EAAQ,IAGjCG,EAAgB,EAAInC,EAASsC,QAAQC,OACvCH,EAAiBD,EAAgB,GAEjCpB,EAAQO,KAAK,WAIjB,OACE,eAAC/C,EAAA,EAAD,WACE,eAAC2C,EAAA,EAAD,CAAYxB,QAAQ,KAApB,uBAAoCyC,EAAgB,KACpD,cAACjB,EAAA,EAAD,CAAY1C,GAAI,EAAhB,SACG2E,iBAAOnD,EAASsC,QAAQH,GAAeK,YAEzCvE,EAAQmB,KAAI,SAACsB,EAAMrB,GAAP,OACX,cAACd,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACgD,EAAA,EAAD,CAAQ4B,QAASH,EAAmBvD,QAAQ,YAA5C,SACGyD,iBAAOzC,MAFKrB,MAMnB,eAACd,EAAA,EAAD,CAAKC,GAAI,EAAT,oBACUwD,EADV,MACoBhC,EAASsC,QAAQC,cC1D5Bc,EAvBK,WAClB,IAAMC,EAAWnF,cACX4C,EAAUC,cACRgB,EAAUN,aAAY,SAACC,GAAD,OAAWA,KAAjCK,MAQR,OACE,eAACzD,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,eAAC0C,EAAA,EAAD,CAAYxB,QAAQ,KAAK6D,WAAW,OAAOC,GAAI,EAA/C,yBACexB,KAEf,cAACR,EAAA,EAAD,CAAQ4B,QAXiB,WAC3BE,EAASzF,EAAkB,IAC3ByF,EAAS5F,EAAmB,KAC5BqD,EAAQO,KAAK,MAQ4B5B,QAAQ,WAA/C,mC,SCSS+D,MAzBf,WACE,OACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACpF,EAAA,EAAD,CAAKqF,UAAU,SAASpF,GAAI,EAA5B,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOqF,KAAK,IAAIC,OAAK,EAArB,UACE,cAAC5C,EAAA,EAAD,CAAYxB,QAAQ,KAAK6D,WAAW,OAApC,sBAGA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOM,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,gB,gBCfRE,EAAe,CACnBnC,kBAAmB,GACnBC,oBAAqB,GACrBC,cAAe,GACfC,mBAAoB,GACpBC,MAAO,GAmCMgC,EAhCC,WAAmC,IAAlCrC,EAAiC,uDAAzBoC,EAAcE,EAAW,uCAChD,OAAQA,EAAOrG,MACb,KAAKP,EACH,OAAO,2BACFsE,GADL,IAEEC,kBAAmBqC,EAAOtG,UAE9B,KAAKL,EACH,OAAO,2BACFqE,GADL,IAEEE,oBAAqBoC,EAAOtG,UAEhC,KAAKJ,EACH,OAAO,2BACFoE,GADL,IAEEG,cAAemC,EAAOtG,UAE1B,KAAKH,EACH,OAAO,2BACFmE,GADL,IAEEI,mBAAoBkC,EAAOtG,UAE/B,KAAKF,EACH,OAAO,2BACFkE,GADL,IAEEK,MAAOiC,EAAOtG,UAElB,QACE,OAAOgE,ICzCEuC,cAAYF,GCG3BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.df7bccb3.chunk.js","sourcesContent":["export const CHANGE_CATEGORY = \"CHANGE_CATEGORY\";\nexport const CHANGE_DIFFICULTY = \"CHANGE_DIFFICULTY\";\nexport const CHANGE_TYPE = \"CHANGE_TYPE\";\nexport const CHANGE_AMOUNT = \"CHANGE_AMOUNT\";\nexport const CHANGE_SCORE = \"CHANGE_SCORE\";\n","import {\n  CHANGE_CATEGORY,\n  CHANGE_DIFFICULTY,\n  CHANGE_AMOUNT,\n  CHANGE_TYPE,\n  CHANGE_SCORE,\n} from \"./actionsTypes\";\n\nexport const handleCategoryChange = (payload) => ({\n  type: CHANGE_CATEGORY,\n  payload,\n});\n\nexport const handleDifficultyChange = (payload) => ({\n  type: CHANGE_DIFFICULTY,\n  payload,\n});\n\nexport const handleTypeChange = (payload) => ({\n  type: CHANGE_TYPE,\n  payload,\n});\n\nexport const handleAmountChange = (payload) => ({\n  type: CHANGE_AMOUNT,\n  payload,\n});\n\nexport const handleScoreChange = (payload) => ({\n  type: CHANGE_SCORE,\n  payload,\n});\n","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  handleCategoryChange,\n  handleDifficultyChange,\n  handleTypeChange,\n} from \"../redux/actions\";\n\nconst SelectField = (props) => {\n  const { label, options } = props;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    switch (label) {\n      case \"Category\":\n        dispatch(handleCategoryChange(e.target.value));\n        break;\n      case \"Difficulty\":\n        dispatch(handleDifficultyChange(e.target.value));\n        break;\n      case \"Type\":\n        dispatch(handleTypeChange(e.target.value));\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box mt={3} width=\"100%\">\n      <FormControl size=\"small\" fullWidth>\n        <InputLabel>{label}</InputLabel>\n        <Select value={value} label={label} onChange={handleChange}>\n          {options.map(({ id, name }) => (\n            <MenuItem value={id} key={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default SelectField;\n","import { FormControl, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { handleAmountChange } from \"../redux/actions\";\n\nconst TextFieldComp = () => {\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    dispatch(handleAmountChange(e.target.value));\n  };\n\n  return (\n    <Box mt={3} width=\"100%\">\n      <FormControl fullWidth size=\"small\">\n        <TextField\n          onChange={handleChange}\n          variant=\"outlined\"\n          label=\"Amount of Questions\"\n          type=\"number\"\n          size=\"small\"\n        />\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default TextFieldComp;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\naxios.defaults.baseURL = \"https://opentdb.com\";\n\nconst useAxios = ({ url }) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = () => {\n      axios\n        .get(url)\n        .then((res) => setResponse(res.data))\n        .catch((err) => setError(err))\n        .finally(() => setLoading(false));\n    };\n    fetchData();\n  }, [url]);\n\n  return { response, error, loading };\n};\n\nexport default useAxios;\n","import { Button, CircularProgress, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory } from \"react-router-dom\";\nimport SelectField from \"../components/SelectField\";\nimport TextFieldComp from \"../components/TextFieldComp\";\nimport useAxios from \"../hooks/useAxios\";\n\nconst Settings = () => {\n  const { response, error, loading } = useAxios({ url: \"/api_category.php\" });\n  const history = useHistory();\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Some Went Wrong!\n      </Typography>\n    );\n  }\n\n  const difficultyOptions = [\n    { id: \"easy\", name: \"Easy\" },\n    { id: \"medium\", name: \"Medium\" },\n    { id: \"hard\", name: \"Hard\" },\n  ];\n\n  const typeOptions = [\n    { id: \"multiple\", name: \"Multiple Choice\" },\n    { id: \"boolean\", name: \"True/False\" },\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push(\"/questions\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SelectField options={response.trivia_categories} label=\"Category\" />\n      <SelectField options={difficultyOptions} label=\"Difficulty\" />\n      <SelectField options={typeOptions} label=\"Type\" />\n      <TextFieldComp />\n      <Box mt={3} width=\"100%\">\n        <Button fullWidth variant=\"contained\" type=\"submit\">\n          Get Started\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nexport default Settings;\n","import { Button, CircularProgress, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { decode } from \"html-entities\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport useAxios from \"../hooks/useAxios\";\nimport { handleScoreChange } from \"../redux/actions\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question,\n    score,\n  } = useSelector((state) => state);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (response?.results.length) {\n      const question = response.results[questionIndex];\n      let answers = [...question.incorrect_answers];\n      answers.splice(\n        getRandomInt(question.incorrect_answers.length),\n        0,\n        question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [response, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (e) => {\n    const question = response.results[questionIndex];\n    if (e.target.textContent === question.correct_answer) {\n      dispatch(handleScoreChange(score + 1));\n    }\n\n    if (questionIndex + 1 < response.results.length) {\n      setQuestionIndex(questionIndex + 1);\n    } else {\n      history.push(\"/score\");\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Questions {questionIndex + 1}</Typography>\n      <Typography mt={5}>\n        {decode(response.results[questionIndex].question)}\n      </Typography>\n      {options.map((data, id) => (\n        <Box mt={2} key={id}>\n          <Button onClick={handleClickAnswer} variant=\"contained\">\n            {decode(data)}\n          </Button>\n        </Box>\n      ))}\n      <Box mt={5}>\n        Score: {score} / {response.results.length}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Questions;\n","import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { handleAmountChange, handleScoreChange } from \"../redux/actions\";\n\nconst FinalScreen = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n  const { score } = useSelector((state) => state);\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChange(0));\n    disptach(handleAmountChange(50));\n    history.push(\"/\");\n  };\n\n  return (\n    <Box mt={30}>\n      <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n        Final Score {score}\n      </Typography>\n      <Button onClick={handleBackToSettings} variant=\"outlined\">\n        back to settings!\n      </Button>\n    </Box>\n  );\n};\n\nexport default FinalScreen;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Settings from \"./pages/Settings\";\nimport Questions from \"./pages/Questions\";\nimport FinalScreen from \"./pages/FinalScreen\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nfunction App() {\n  return (\n    <Router>\n      <Container maxWidth=\"sm\">\n        <Box textAlign=\"center\" mt={5}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Typography variant=\"h2\" fontWeight=\"bold\">\n                Quiz App\n              </Typography>\n              <Settings />\n            </Route>\n            <Route path=\"/questions\">\n              <Questions />\n            </Route>\n            <Route path=\"/score\">\n              <FinalScreen />\n            </Route>\n          </Switch>\n        </Box>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  CHANGE_AMOUNT,\n  CHANGE_CATEGORY,\n  CHANGE_DIFFICULTY,\n  CHANGE_SCORE,\n  CHANGE_TYPE,\n} from \"./actionsTypes\";\n\nconst initialState = {\n  question_category: \"\",\n  question_difficulty: \"\",\n  question_type: \"\",\n  amount_of_question: 50,\n  score: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_CATEGORY:\n      return {\n        ...state,\n        question_category: action.payload,\n      };\n    case CHANGE_DIFFICULTY:\n      return {\n        ...state,\n        question_difficulty: action.payload,\n      };\n    case CHANGE_TYPE:\n      return {\n        ...state,\n        question_type: action.payload,\n      };\n    case CHANGE_AMOUNT:\n      return {\n        ...state,\n        amount_of_question: action.payload,\n      };\n    case CHANGE_SCORE:\n      return {\n        ...state,\n        score: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default createStore(reducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}